<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.hanyoonsoo.springtoy.OrderIntegrationTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-02-22T13:12:21" hostname="han-yunsuui-MacBookPro.local" time="0.865">
  <properties/>
  <testcase name="Order 취소 테스트" classname="com.hanyoonsoo.springtoy.OrderIntegrationTest" time="0.865"/>
  <system-out><![CDATA[22:12:19.240 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.hanyoonsoo.springtoy.OrderIntegrationTest]: OrderIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
22:12:19.294 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.hanyoonsoo.springtoy.SpringtoyApplication for test class com.hanyoonsoo.springtoy.OrderIntegrationTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.8)

2024-02-22T22:12:19.469+09:00  INFO 99539 --- [    Test worker] c.h.springtoy.OrderIntegrationTest       : Starting OrderIntegrationTest using Java 17.0.6 with PID 99539 (started by hanyoonsoo in /Users/hanyoonsoo/IdeaProjects/springtoy)
2024-02-22T22:12:19.470+09:00  INFO 99539 --- [    Test worker] c.h.springtoy.OrderIntegrationTest       : No active profile set, falling back to 1 default profile: "default"
2024-02-22T22:12:19.703+09:00  INFO 99539 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-02-22T22:12:19.704+09:00  INFO 99539 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-02-22T22:12:19.712+09:00  INFO 99539 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2024-02-22T22:12:19.796+09:00  INFO 99539 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-02-22T22:12:19.796+09:00  INFO 99539 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-02-22T22:12:19.876+09:00  INFO 99539 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 79 ms. Found 3 JPA repository interfaces.
2024-02-22T22:12:19.881+09:00  INFO 99539 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-02-22T22:12:19.881+09:00  INFO 99539 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-02-22T22:12:19.887+09:00  INFO 99539 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.hanyoonsoo.springtoy.module.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-02-22T22:12:19.888+09:00  INFO 99539 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.hanyoonsoo.springtoy.module.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-02-22T22:12:19.889+09:00  INFO 99539 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.hanyoonsoo.springtoy.module.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-02-22T22:12:19.889+09:00  INFO 99539 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-02-22T22:12:20.144+09:00  INFO 99539 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-02-22T22:12:20.167+09:00  INFO 99539 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.20.Final
2024-02-22T22:12:20.168+09:00  INFO 99539 --- [    Test worker] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2024-02-22T22:12:20.210+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3313463c
2024-02-22T22:12:20.210+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3313463c
2024-02-22T22:12:20.210+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3313463c
2024-02-22T22:12:20.210+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@9c0d0bd
2024-02-22T22:12:20.210+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@9c0d0bd
2024-02-22T22:12:20.210+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@176333ee
2024-02-22T22:12:20.210+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@176333ee
2024-02-22T22:12:20.210+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@18e6b72b
2024-02-22T22:12:20.210+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@18e6b72b
2024-02-22T22:12:20.210+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@316d30ad
2024-02-22T22:12:20.210+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@316d30ad
2024-02-22T22:12:20.210+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@316d30ad
2024-02-22T22:12:20.211+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3ea75b05
2024-02-22T22:12:20.211+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3ea75b05
2024-02-22T22:12:20.211+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3ea75b05
2024-02-22T22:12:20.211+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4597e6e3
2024-02-22T22:12:20.211+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4597e6e3
2024-02-22T22:12:20.211+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@41ece227
2024-02-22T22:12:20.211+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@5e3d2765
2024-02-22T22:12:20.211+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5e3d2765
2024-02-22T22:12:20.211+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7910f355
2024-02-22T22:12:20.211+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@34ab26a
2024-02-22T22:12:20.211+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@259195fe
2024-02-22T22:12:20.211+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@259195fe
2024-02-22T22:12:20.211+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@259195fe
2024-02-22T22:12:20.211+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@12209826
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@12209826
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@12209826
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6cd45b6c
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@6cd45b6c
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6cd45b6c
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3a5b7d7e
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@3a5b7d7e
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3a5b7d7e
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@13cc31ae
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@13cc31ae
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@13cc31ae
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5bb7a59
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5bb7a59
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4bfa5eb9
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4bfa5eb9
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@2a2b7a35
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@2a2b7a35
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@2a2b7a35
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@58186f9f
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@62faf77
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@62faf77
2024-02-22T22:12:20.212+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1f39269d
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@6e321d9d
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6e321d9d
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@6e321d9d
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@754de353
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@ee2ae9a
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@58b97c15
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@26994c6a
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@26994c6a
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3cd46491
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3cd46491
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@27d98bef
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@349312d5
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5885e231
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@47eaf55c
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@2c0798bd
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2e3252
2024-02-22T22:12:20.213+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@77cddc0c
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@77cddc0c
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@671d97bc
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@671d97bc
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@774f2992
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@774f2992
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@602298b
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@602298b
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1fb6b8fb
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1fb6b8fb
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@149d7cc6
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1a10c47e
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@d49e8c6
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@d49e8c6
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2712e8f4
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5896cb9c
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@44b9c7c4
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@674184d
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@674184d
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3611153f
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5835e24a
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@5238896f
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5238896f
2024-02-22T22:12:20.214+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@74a85515
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@74a85515
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4a2e1e52
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4a2e1e52
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4a2e1e52
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3dfe92ef
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3dfe92ef
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3dfe92ef
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2b9b17ce
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1d2def55
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@274bae2c
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@274bae2c
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6eeb29c0
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6eeb29c0
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6eeb29c0
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1d3d76b4
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6f986501
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@15d88c10
2024-02-22T22:12:20.215+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@15d88c10
2024-02-22T22:12:20.216+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@22ca1242
2024-02-22T22:12:20.216+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@22ca1242
2024-02-22T22:12:20.216+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@22ca1242
2024-02-22T22:12:20.216+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@54b44879
2024-02-22T22:12:20.216+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@54b44879
2024-02-22T22:12:20.216+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@78288f83
2024-02-22T22:12:20.216+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@78288f83
2024-02-22T22:12:20.216+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@29c1249a
2024-02-22T22:12:20.216+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@29c1249a
2024-02-22T22:12:20.216+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5beb6be2
2024-02-22T22:12:20.216+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5beb6be2
2024-02-22T22:12:20.216+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@2d6a0766
2024-02-22T22:12:20.216+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2d6a0766
2024-02-22T22:12:20.216+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1182d1df
2024-02-22T22:12:20.218+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@53ba1175
2024-02-22T22:12:20.218+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@53ba1175
2024-02-22T22:12:20.219+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@1a2724d3
2024-02-22T22:12:20.219+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7dd91ffc
2024-02-22T22:12:20.219+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1c2dd89b
2024-02-22T22:12:20.219+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3ad847f8
2024-02-22T22:12:20.219+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@19faedcc
2024-02-22T22:12:20.219+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2c6927f0
2024-02-22T22:12:20.219+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5ef2cbe6
2024-02-22T22:12:20.219+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@266da047
2024-02-22T22:12:20.219+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@68b7bdcb
2024-02-22T22:12:20.290+09:00  INFO 99539 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-02-22T22:12:20.301+09:00  INFO 99539 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-02-22T22:12:20.336+09:00  INFO 99539 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:tcp://localhost/~/IdeaProjects/springtoy user=SA
2024-02-22T22:12:20.337+09:00  INFO 99539 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-02-22T22:12:20.371+09:00 DEBUG 99539 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-02-22T22:12:20.371+09:00 DEBUG 99539 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-02-22T22:12:20.371+09:00 DEBUG 99539 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-02-22T22:12:20.372+09:00 DEBUG 99539 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-02-22T22:12:20.372+09:00 DEBUG 99539 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-02-22T22:12:20.373+09:00 DEBUG 99539 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2024-02-22T22:12:20.375+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-02-22T22:12:20.375+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-02-22T22:12:20.376+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-02-22T22:12:20.377+09:00 DEBUG 99539 --- [    Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4d8f2cfd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6d4502ca]
2024-02-22T22:12:20.913+09:00  INFO 99539 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-02-22T22:12:20.914+09:00 DEBUG 99539 --- [    Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4d8f2cfd] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@54da736e]
2024-02-22T22:12:20.920+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists delivery cascade 
2024-02-22T22:12:20.921+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists image cascade 
2024-02-22T22:12:20.921+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists item cascade 
2024-02-22T22:12:20.922+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists order_item cascade 
2024-02-22T22:12:20.922+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists orders cascade 
2024-02-22T22:12:20.922+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists users cascade 
2024-02-22T22:12:20.922+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    drop sequence if exists delivery_seq
2024-02-22T22:12:20.925+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    create sequence delivery_seq start with 1 increment by 50
2024-02-22T22:12:20.927+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    create table delivery (
        deleted boolean not null,
        create_at timestamp(6),
        delivery_id bigint not null,
        updated_at timestamp(6),
        city varchar(255),
        delivery_status varchar(255) check (delivery_status in ('READY','COMP')),
        street varchar(255),
        zipcode varchar(255),
        primary key (delivery_id)
    )
2024-02-22T22:12:20.928+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    create table image (
        deleted boolean not null,
        create_at timestamp(6),
        image_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        image_url varchar(255),
        original_filename varchar(255),
        store_filename varchar(255),
        primary key (image_id)
    )
2024-02-22T22:12:20.929+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    create table item (
        price integer not null,
        stock_quantity integer not null,
        item_id bigint generated by default as identity,
        dtype varchar(31) not null,
        actor varchar(255),
        artist varchar(255),
        author varchar(255),
        director varchar(255),
        etc varchar(255),
        isbn varchar(255),
        name varchar(255),
        primary key (item_id)
    )
2024-02-22T22:12:20.929+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    create table order_item (
        count integer not null,
        deleted boolean not null,
        order_price integer not null,
        create_at timestamp(6),
        id bigint generated by default as identity,
        item_id bigint,
        order_id bigint,
        updated_at timestamp(6),
        primary key (id)
    )
2024-02-22T22:12:20.930+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    create table orders (
        deleted boolean not null,
        create_at timestamp(6),
        delivery_id bigint unique,
        order_date timestamp(6),
        order_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        order_status varchar(255) check (order_status in ('ORDER','CANCEL')),
        primary key (order_id)
    )
2024-02-22T22:12:20.931+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    create table users (
        deleted boolean not null,
        is_verify boolean not null,
        create_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        city varchar(255),
        email varchar(255) unique,
        gender varchar(255) check (gender in ('MALE','FEMALE')),
        name varchar(255),
        nick_name varchar(255),
        password varchar(255),
        role varchar(255) check (role in ('ROLE_USER','ROLE_VERIFIED_USER','ROLE_ADMIN')),
        street varchar(255),
        zipcode varchar(255),
        primary key (user_id)
    )
2024-02-22T22:12:20.932+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    alter table if exists image 
       add constraint FKcvpnctgluno47ac6avana5sqf 
       foreign key (user_id) 
       references users
2024-02-22T22:12:20.933+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    alter table if exists order_item 
       add constraint FKija6hjjiit8dprnmvtvgdp6ru 
       foreign key (item_id) 
       references item
2024-02-22T22:12:20.934+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    alter table if exists order_item 
       add constraint FKt4dc2r9nbvbujrljv3e23iibt 
       foreign key (order_id) 
       references orders
2024-02-22T22:12:20.934+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    alter table if exists orders 
       add constraint FKtkrur7wg4d8ax0pwgo0vmy20c 
       foreign key (delivery_id) 
       references delivery
2024-02-22T22:12:20.934+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2024-02-22T22:12:20.936+09:00 TRACE 99539 --- [    Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@54da736e] for TypeConfiguration
2024-02-22T22:12:20.936+09:00  INFO 99539 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-02-22T22:12:21.252+09:00  INFO 99539 --- [    Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-02-22T22:12:21.714+09:00  INFO 99539 --- [    Test worker] c.h.s.m.g.s.SecurityConfiguration        : SecurityConfiguration.CustomFilterConfigurer.configure excute
2024-02-22T22:12:21.717+09:00  INFO 99539 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1ab6a093, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6d95b51d, org.springframework.security.web.context.SecurityContextHolderFilter@36b5dbdf, org.springframework.security.web.header.HeaderWriterFilter@2693b289, org.springframework.web.filter.CorsFilter@7d2dfe9c, org.springframework.security.web.authentication.logout.LogoutFilter@219a9b16, com.hanyoonsoo.springtoy.module.global.security.JwtAuthenticationFilter@60b721c9, com.hanyoonsoo.springtoy.module.global.security.JwtVerificationFilter@4f2ab774, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@482652f7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b0a864e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f57ced1, org.springframework.security.web.session.SessionManagementFilter@29e40db1, org.springframework.security.web.access.ExceptionTranslationFilter@358caf3a, org.springframework.security.web.access.intercept.AuthorizationFilter@7740028a]
2024-02-22T22:12:21.910+09:00  INFO 99539 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-02-22T22:12:21.911+09:00  INFO 99539 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-02-22T22:12:21.911+09:00  INFO 99539 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2024-02-22T22:12:21.926+09:00  INFO 99539 --- [    Test worker] c.h.springtoy.OrderIntegrationTest       : Started OrderIntegrationTest in 2.57 seconds (process running for 3.072)
2024-02-22T22:12:22.266+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    select
        u1_0.user_id,
        u1_0.city,
        u1_0.street,
        u1_0.zipcode,
        u1_0.create_at,
        u1_0.deleted,
        u1_0.email,
        u1_0.gender,
        u1_0.is_verify,
        u1_0.name,
        u1_0.nick_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        (
            u1_0.deleted = false
        ) 
        and u1_0.email=?
2024-02-22T22:12:22.380+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        users
        (city,street,zipcode,create_at,deleted,email,gender,is_verify,name,nick_name,password,role,updated_at,user_id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
2024-02-22T22:12:22.390+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    select
        u1_0.user_id,
        u1_0.city,
        u1_0.street,
        u1_0.zipcode,
        u1_0.create_at,
        u1_0.deleted,
        u1_0.email,
        u1_0.gender,
        u1_0.is_verify,
        u1_0.name,
        u1_0.nick_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        (
            u1_0.deleted = false
        ) 
        and u1_0.email=?
2024-02-22T22:12:22.393+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    select
        u1_0.user_id,
        u1_0.city,
        u1_0.street,
        u1_0.zipcode,
        u1_0.create_at,
        u1_0.deleted,
        u1_0.email,
        u1_0.gender,
        u1_0.is_verify,
        u1_0.name,
        u1_0.nick_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        (
            u1_0.deleted = false
        ) 
        and u1_0.email=?
2024-02-22T22:12:22.417+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        item
        (name,price,stock_quantity,author,isbn,dtype,item_id) 
    values
        (?,?,?,?,?,'B',default)
2024-02-22T22:12:22.423+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    update
        users 
    set
        city=?,
        street=?,
        zipcode=?,
        deleted=?,
        email=?,
        gender=?,
        is_verify=?,
        name=?,
        nick_name=?,
        password=?,
        role=?,
        updated_at=? 
    where
        user_id=?
2024-02-22T22:12:22.426+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    select
        u1_0.user_id,
        u1_0.city,
        u1_0.street,
        u1_0.zipcode,
        u1_0.create_at,
        u1_0.deleted,
        u1_0.email,
        u1_0.gender,
        u1_0.is_verify,
        u1_0.name,
        u1_0.nick_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        (
            u1_0.deleted = false
        ) 
        and u1_0.email=?
2024-02-22T22:12:22.435+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    select
        next value for delivery_seq
2024-02-22T22:12:22.437+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        delivery
        (city,street,zipcode,create_at,deleted,delivery_status,updated_at,delivery_id) 
    values
        (?,?,?,?,?,?,?,?)
2024-02-22T22:12:22.438+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        orders
        (create_at,deleted,delivery_id,order_date,order_status,updated_at,user_id,order_id) 
    values
        (?,?,?,?,?,?,?,default)
2024-02-22T22:12:22.440+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        order_item
        (count,create_at,deleted,item_id,order_id,order_price,updated_at,id) 
    values
        (?,?,?,?,?,?,?,default)
2024-02-22T22:12:22.504+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    update
        item 
    set
        name=?,
        price=?,
        stock_quantity=?,
        author=?,
        isbn=? 
    where
        item_id=?
2024-02-22T22:12:22.507+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    select
        distinct o1_0.order_id,
        o1_0.create_at,
        o1_0.deleted,
        d1_0.delivery_id,
        d1_0.city,
        d1_0.street,
        d1_0.zipcode,
        d1_0.create_at,
        d1_0.deleted,
        d1_0.delivery_status,
        d1_0.updated_at,
        o1_0.order_date,
        o2_0.order_id,
        o2_0.id,
        o2_0.count,
        o2_0.create_at,
        o2_0.deleted,
        i1_0.item_id,
        i1_0.dtype,
        i1_0.name,
        i1_0.price,
        i1_0.stock_quantity,
        i1_0.artist,
        i1_0.etc,
        i1_0.author,
        i1_0.isbn,
        i1_0.actor,
        i1_0.director,
        o2_0.order_price,
        o2_0.updated_at,
        o1_0.order_status,
        o1_0.updated_at,
        u1_0.user_id,
        u1_0.city,
        u1_0.street,
        u1_0.zipcode,
        u1_0.create_at,
        u1_0.deleted,
        u1_0.email,
        u1_0.gender,
        u1_0.is_verify,
        u1_0.name,
        u1_0.nick_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        orders o1_0 
    join
        users u1_0 
            on u1_0.user_id=o1_0.user_id 
            and (
                u1_0.deleted = false
            ) 
    join
        delivery d1_0 
            on d1_0.delivery_id=o1_0.delivery_id 
            and (
                d1_0.deleted = false
            ) 
    join
        order_item o2_0 
            on o1_0.order_id=o2_0.order_id 
            and (
                o2_0.deleted = false
            )  
    join
        item i1_0 
            on i1_0.item_id=o2_0.item_id 
    where
        (
            o1_0.deleted = false
        ) 
        and i1_0.name like ? escape '!' 
        and u1_0.email=?
2024-02-22T22:12:22.703+09:00  INFO 99539 --- [    Test worker] c.h.s.m.g.security.JwtTokenProvider      : # AuthUser.getRoles 권한 체크 = [ROLE_VERIFIED_USER]
CustomUserDetails(id=null, email=email@gmail.com, role_str=ROLE_VERIFIED_USER, password=null, nickName=null)
2024-02-22T22:12:22.705+09:00  INFO 99539 --- [    Test worker] c.h.s.m.g.s.JwtVerificationFilter        : # Token verification success!

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /orders/1/cancel
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdXRoIjoiUk9MRV9WRVJJRklFRF9VU0VSIiwic3ViIjoiZW1haWxAZ21haWwuY29tIiwiZXhwIjoxNzA4NjA5MzQyLCJpYXQiOjE3MDg2MDc1NDJ9.-W6fpYNVJJP9xzXolMlmfK7pRozyqALm2HliNH9ovA0", Refresh:"Mdbf5Hxp7UPRVPNiEGNcDkvYub9U4mBlmSaTy9+uhRqzFcCZmTX5D2/xovR0IM2wm2Cd+WQaSgi6ESAF58TVz5VNJcA0ksMB5BgdLcEtObWs56Ppfzaf+gFPxcYFuMPOzqpf/nxeekZfLZo89sCKvgVS20TLfS/32KCxmNv3vzpJrwaYfExBsIf27Z4FL5CpJcAic2mdMW3JjeBl3x4HEQ=="]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hanyoonsoo.springtoy.module.controller.OrderController
           Method = com.hanyoonsoo.springtoy.module.controller.OrderController#orderCancel(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 202
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0"]
     Content type = application/json
             Body = {"data":"주문을 취소했습니다."}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2024-02-22T22:12:22.735+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    update
        item 
    set
        name=?,
        price=?,
        stock_quantity=?,
        author=?,
        isbn=? 
    where
        item_id=?
2024-02-22T22:12:22.736+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    update
        orders 
    set
        deleted=?,
        delivery_id=?,
        order_date=?,
        order_status=?,
        updated_at=?,
        user_id=? 
    where
        order_id=?
2024-02-22T22:12:22.738+09:00 DEBUG 99539 --- [    Test worker] org.hibernate.SQL                        : 
    select
        distinct o1_0.order_id,
        o1_0.create_at,
        o1_0.deleted,
        d1_0.delivery_id,
        d1_0.city,
        d1_0.street,
        d1_0.zipcode,
        d1_0.create_at,
        d1_0.deleted,
        d1_0.delivery_status,
        d1_0.updated_at,
        o1_0.order_date,
        o2_0.order_id,
        o2_0.id,
        o2_0.count,
        o2_0.create_at,
        o2_0.deleted,
        i1_0.item_id,
        i1_0.dtype,
        i1_0.name,
        i1_0.price,
        i1_0.stock_quantity,
        i1_0.artist,
        i1_0.etc,
        i1_0.author,
        i1_0.isbn,
        i1_0.actor,
        i1_0.director,
        o2_0.order_price,
        o2_0.updated_at,
        o1_0.order_status,
        o1_0.updated_at,
        u1_0.user_id,
        u1_0.city,
        u1_0.street,
        u1_0.zipcode,
        u1_0.create_at,
        u1_0.deleted,
        u1_0.email,
        u1_0.gender,
        u1_0.is_verify,
        u1_0.name,
        u1_0.nick_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        orders o1_0 
    join
        users u1_0 
            on u1_0.user_id=o1_0.user_id 
            and (
                u1_0.deleted = false
            ) 
    join
        delivery d1_0 
            on d1_0.delivery_id=o1_0.delivery_id 
            and (
                d1_0.deleted = false
            ) 
    join
        order_item o2_0 
            on o1_0.order_id=o2_0.order_id 
            and (
                o2_0.deleted = false
            )  
    join
        item i1_0 
            on i1_0.item_id=o2_0.item_id 
    where
        (
            o1_0.deleted = false
        ) 
        and i1_0.name like ? escape '!' 
        and u1_0.email=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
