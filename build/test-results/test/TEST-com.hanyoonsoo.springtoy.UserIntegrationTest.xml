<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.hanyoonsoo.springtoy.UserIntegrationTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-02-26T04:01:50" hostname="han-yunsuui-MacBookPro.local" time="0.585">
  <properties/>
  <testcase name="회원 조회" classname="com.hanyoonsoo.springtoy.UserIntegrationTest" time="0.585"/>
  <system-out><![CDATA[13:01:46.764 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.hanyoonsoo.springtoy.UserIntegrationTest]: UserIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
13:01:46.820 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.hanyoonsoo.springtoy.SpringtoyApplication for test class com.hanyoonsoo.springtoy.UserIntegrationTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.8)

2024-02-26T13:01:47.006+09:00  INFO 54916 --- [    Test worker] c.h.springtoy.UserIntegrationTest        : Starting UserIntegrationTest using Java 17.0.6 with PID 54916 (started by hanyoonsoo in /Users/hanyoonsoo/IdeaProjects/springtoy)
2024-02-26T13:01:47.007+09:00  INFO 54916 --- [    Test worker] c.h.springtoy.UserIntegrationTest        : The following 1 profile is active: "test"
2024-02-26T13:01:47.278+09:00  INFO 54916 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-02-26T13:01:47.279+09:00  INFO 54916 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-02-26T13:01:47.289+09:00  INFO 54916 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2024-02-26T13:01:47.381+09:00  INFO 54916 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-02-26T13:01:47.382+09:00  INFO 54916 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-02-26T13:01:47.460+09:00  INFO 54916 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 76 ms. Found 4 JPA repository interfaces.
2024-02-26T13:01:47.464+09:00  INFO 54916 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-02-26T13:01:47.465+09:00  INFO 54916 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-02-26T13:01:47.470+09:00  INFO 54916 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.hanyoonsoo.springtoy.module.repository.ImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-02-26T13:01:47.471+09:00  INFO 54916 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.hanyoonsoo.springtoy.module.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-02-26T13:01:47.472+09:00  INFO 54916 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.hanyoonsoo.springtoy.module.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-02-26T13:01:47.472+09:00  INFO 54916 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.hanyoonsoo.springtoy.module.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-02-26T13:01:47.472+09:00  INFO 54916 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-02-26T13:01:47.748+09:00  INFO 54916 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-02-26T13:01:47.776+09:00  INFO 54916 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.20.Final
2024-02-26T13:01:47.777+09:00  INFO 54916 --- [    Test worker] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2024-02-26T13:01:47.824+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@67e6eb52
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@67e6eb52
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@67e6eb52
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3e8b8f0
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3e8b8f0
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5ad57e90
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5ad57e90
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1a345298
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1a345298
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4ad896f7
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4ad896f7
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4ad896f7
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@c318864
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@c318864
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@c318864
2024-02-26T13:01:47.825+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4b98225c
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4b98225c
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@4beae1e3
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@3c488b34
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3c488b34
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@32e697ac
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3866c96e
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@241fc278
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@241fc278
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@241fc278
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@5c76fce4
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@5c76fce4
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5c76fce4
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5aab5b31
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@5aab5b31
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5aab5b31
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5408d4b3
2024-02-26T13:01:47.826+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@5408d4b3
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5408d4b3
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@eded048
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@eded048
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@eded048
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@65a48cab
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@65a48cab
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@655621fd
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@655621fd
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@77e9dca8
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@77e9dca8
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@77e9dca8
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@fcd0e8d
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@4e4d0a0b
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4e4d0a0b
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1a4083f6
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@23f5008a
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@23f5008a
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@23f5008a
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@44abdb1f
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@62108cd3
2024-02-26T13:01:47.827+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7cd1ec54
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@77ab5214
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@77ab5214
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6d420cdd
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6d420cdd
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@bd273b2
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@78128dd0
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@55044b34
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@28dd81ad
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@300a38e7
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5c9a4f3b
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2bb0e277
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2bb0e277
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6f24ce45
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6f24ce45
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@e881e46
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@e881e46
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@657b3b
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@657b3b
2024-02-26T13:01:47.828+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2cea921a
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2cea921a
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@65753724
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2bc16fe2
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@d66502
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@d66502
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@78545d40
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@34549979
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@144a5e6e
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2707c790
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2707c790
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7de3206d
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6dece1f9
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@2b936b04
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2b936b04
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@32b112a1
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@32b112a1
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5635bcd2
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5635bcd2
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5635bcd2
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5c5c7cc4
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5c5c7cc4
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5c5c7cc4
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6c27e700
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@56b9d43f
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@2d913116
2024-02-26T13:01:47.829+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2d913116
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1214d23c
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1214d23c
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1214d23c
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@41582899
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@595814a1
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@7de5871d
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7de5871d
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@49d42faf
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@49d42faf
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@49d42faf
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@4948daec
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4948daec
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@502c2278
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@502c2278
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1209a0f
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1209a0f
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@696174d3
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@696174d3
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@66715ca9
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@66715ca9
2024-02-26T13:01:47.830+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@577f9dfd
2024-02-26T13:01:47.833+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@57bdceaa
2024-02-26T13:01:47.833+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@57bdceaa
2024-02-26T13:01:47.833+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@38a96593
2024-02-26T13:01:47.833+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5df64b2a
2024-02-26T13:01:47.833+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7afb9c93
2024-02-26T13:01:47.833+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@30d15e4a
2024-02-26T13:01:47.833+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@43a7203e
2024-02-26T13:01:47.834+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2c678c7b
2024-02-26T13:01:47.834+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@a5e8260
2024-02-26T13:01:47.834+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@30c7be6f
2024-02-26T13:01:47.834+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4a9bce99
2024-02-26T13:01:47.905+09:00  INFO 54916 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-02-26T13:01:47.917+09:00  INFO 54916 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-02-26T13:01:47.961+09:00  INFO 54916 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:tcp://localhost/~/IdeaProjects/springtoy user=SA
2024-02-26T13:01:47.961+09:00  INFO 54916 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-02-26T13:01:47.994+09:00 DEBUG 54916 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-02-26T13:01:47.994+09:00 DEBUG 54916 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-02-26T13:01:47.994+09:00 DEBUG 54916 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-02-26T13:01:47.994+09:00 DEBUG 54916 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-02-26T13:01:47.995+09:00 DEBUG 54916 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-02-26T13:01:47.995+09:00 DEBUG 54916 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2024-02-26T13:01:47.997+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-02-26T13:01:47.997+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-02-26T13:01:47.998+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-02-26T13:01:47.999+09:00 DEBUG 54916 --- [    Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71beada8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@17f41739]
2024-02-26T13:01:48.529+09:00  INFO 54916 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-02-26T13:01:48.529+09:00 DEBUG 54916 --- [    Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@71beada8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@18174bd9]
2024-02-26T13:01:48.537+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists delivery cascade 
2024-02-26T13:01:48.539+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists image cascade 
2024-02-26T13:01:48.548+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists item cascade 
2024-02-26T13:01:48.549+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists order_item cascade 
2024-02-26T13:01:48.550+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists orders cascade 
2024-02-26T13:01:48.551+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    drop table if exists users cascade 
2024-02-26T13:01:48.551+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    drop sequence if exists delivery_seq
2024-02-26T13:01:48.555+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    create sequence delivery_seq start with 1 increment by 50
2024-02-26T13:01:48.557+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    create table delivery (
        deleted boolean not null,
        create_at timestamp(6),
        delivery_id bigint not null,
        updated_at timestamp(6),
        city varchar(255),
        delivery_status varchar(255) check (delivery_status in ('READY','COMP')),
        street varchar(255),
        zipcode varchar(255),
        primary key (delivery_id)
    )
2024-02-26T13:01:48.559+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    create table image (
        deleted boolean not null,
        create_at timestamp(6),
        image_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        image_url varchar(255) unique,
        primary key (image_id)
    )
2024-02-26T13:01:48.561+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    create table item (
        price integer not null,
        stock_quantity integer not null,
        item_id bigint generated by default as identity,
        dtype varchar(31) not null,
        actor varchar(255),
        artist varchar(255),
        author varchar(255),
        director varchar(255),
        etc varchar(255),
        isbn varchar(255),
        name varchar(255),
        primary key (item_id)
    )
2024-02-26T13:01:48.563+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    create table order_item (
        count integer not null,
        deleted boolean not null,
        order_price integer not null,
        create_at timestamp(6),
        id bigint generated by default as identity,
        item_id bigint,
        order_id bigint,
        updated_at timestamp(6),
        primary key (id)
    )
2024-02-26T13:01:48.565+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    create table orders (
        deleted boolean not null,
        create_at timestamp(6),
        delivery_id bigint unique,
        order_date timestamp(6),
        order_id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint,
        order_status varchar(255) check (order_status in ('ORDER','CANCEL')),
        primary key (order_id)
    )
2024-02-26T13:01:48.567+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    create table users (
        deleted boolean not null,
        is_verify boolean not null,
        create_at timestamp(6),
        updated_at timestamp(6),
        user_id bigint generated by default as identity,
        city varchar(255),
        email varchar(255) unique,
        gender varchar(255) check (gender in ('MALE','FEMALE')),
        name varchar(255),
        nick_name varchar(255),
        password varchar(255),
        role varchar(255) check (role in ('ROLE_USER','ROLE_VERIFIED_USER','ROLE_ADMIN')),
        street varchar(255),
        zipcode varchar(255),
        primary key (user_id)
    )
2024-02-26T13:01:48.568+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    alter table if exists image 
       add constraint FKcvpnctgluno47ac6avana5sqf 
       foreign key (user_id) 
       references users
2024-02-26T13:01:48.570+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    alter table if exists order_item 
       add constraint FKija6hjjiit8dprnmvtvgdp6ru 
       foreign key (item_id) 
       references item
2024-02-26T13:01:48.572+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    alter table if exists order_item 
       add constraint FKt4dc2r9nbvbujrljv3e23iibt 
       foreign key (order_id) 
       references orders
2024-02-26T13:01:48.575+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    alter table if exists orders 
       add constraint FKtkrur7wg4d8ax0pwgo0vmy20c 
       foreign key (delivery_id) 
       references delivery
2024-02-26T13:01:48.577+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2024-02-26T13:01:48.581+09:00 TRACE 54916 --- [    Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@18174bd9] for TypeConfiguration
2024-02-26T13:01:48.581+09:00  INFO 54916 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-02-26T13:01:48.900+09:00  INFO 54916 --- [    Test worker] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-02-26T13:01:50.200+09:00  INFO 54916 --- [    Test worker] c.h.s.m.g.s.SecurityConfiguration        : SecurityConfiguration.CustomFilterConfigurer.configure excute
2024-02-26T13:01:50.206+09:00  INFO 54916 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@62edb254, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@449ca6b6, org.springframework.security.web.context.SecurityContextHolderFilter@740e38e9, org.springframework.security.web.header.HeaderWriterFilter@c444506, org.springframework.web.filter.CorsFilter@12bc2b41, org.springframework.security.web.authentication.logout.LogoutFilter@6a937d6f, com.hanyoonsoo.springtoy.module.global.security.JwtAuthenticationFilter@61466b5f, com.hanyoonsoo.springtoy.module.global.security.JwtVerificationFilter@6eb61a31, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ef7f6d5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5cf69333, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4fbea847, org.springframework.security.web.session.SessionManagementFilter@38f57609, org.springframework.security.web.access.ExceptionTranslationFilter@5e5616f2, org.springframework.security.web.access.intercept.AuthorizationFilter@42a4b97]
2024-02-26T13:01:50.520+09:00  INFO 54916 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-02-26T13:01:50.520+09:00  INFO 54916 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-02-26T13:01:50.521+09:00  INFO 54916 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2024-02-26T13:01:50.536+09:00  INFO 54916 --- [    Test worker] c.h.springtoy.UserIntegrationTest        : Started UserIntegrationTest in 3.659 seconds (process running for 4.186)
2024-02-26T13:01:50.610+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    select
        u1_0.user_id,
        u1_0.city,
        u1_0.street,
        u1_0.zipcode,
        u1_0.create_at,
        u1_0.deleted,
        u1_0.email,
        u1_0.gender,
        u1_0.is_verify,
        u1_0.name,
        u1_0.nick_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        (
            u1_0.deleted = false
        ) 
        and u1_0.email=?
2024-02-26T13:01:50.733+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    insert 
    into
        users
        (city,street,zipcode,create_at,deleted,email,gender,is_verify,name,nick_name,password,role,updated_at,user_id) 
    values
        (?,?,?,?,?,?,?,?,?,?,?,?,?,default)
2024-02-26T13:01:50.785+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    select
        u1_0.user_id,
        u1_0.city,
        u1_0.street,
        u1_0.zipcode,
        u1_0.create_at,
        u1_0.deleted,
        u1_0.email,
        u1_0.gender,
        u1_0.is_verify,
        u1_0.name,
        u1_0.nick_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        (
            u1_0.deleted = false
        ) 
        and u1_0.email=?
2024-02-26T13:01:51.052+09:00  INFO 54916 --- [    Test worker] c.h.s.m.g.security.JwtTokenProvider      : # AuthUser.getRoles 권한 체크 = [ROLE_USER]
CustomUserDetails(id=null, email=email@gmail.com, role_str=ROLE_USER, password=null, nickName=null)
2024-02-26T13:01:51.056+09:00  INFO 54916 --- [    Test worker] c.h.s.m.g.s.JwtVerificationFilter        : # Token verification success!
2024-02-26T13:01:51.069+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    select
        u1_0.user_id,
        u1_0.city,
        u1_0.street,
        u1_0.zipcode,
        u1_0.create_at,
        u1_0.deleted,
        u1_0.email,
        u1_0.gender,
        u1_0.is_verify,
        u1_0.name,
        u1_0.nick_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        (
            u1_0.deleted = false
        ) 
        and u1_0.email=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /users
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdXRoIjoiUk9MRV9VU0VSIiwic3ViIjoiZW1haWxAZ21haWwuY29tIiwiZXhwIjoxNzA4OTIxOTEwLCJpYXQiOjE3MDg5MjAxMTB9.SnQqLK6-JIq8g4J5-kOT6eiiSrpzyYv0JuTfTKQwt1c", Refresh:"3k+7zm40tpW4WoU0wCfJwB7rjLaL2ILKEyTFP6F4o83iUxNQgSaF35yFUPhoHEd8KtlHKSAnxqMqPLbEIK/vZiVdBOUNSWBRmbKALQekSvhYVvM8xeQU5M9LiVtkKXPiNSF5JSgqENBq7hmtUWLofmuQIW8S/YtRZi/8cuD6xQIvFgzQHxh65jAT0E548Xx2ZIFdBJvjMrhtntLTjW1AVw=="]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.hanyoonsoo.springtoy.module.controller.UserController
           Method = com.hanyoonsoo.springtoy.module.controller.UserController#getUser(CustomUserDetails)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0"]
     Content type = application/json
             Body = {"data":{"email":"email@gmail.com","name":"test","nickname":"test","address":{"city":"test","street":"1234","zipcode":"1234"},"gender":"남자"}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2024-02-26T13:01:51.124+09:00 DEBUG 54916 --- [    Test worker] org.hibernate.SQL                        : 
    select
        u1_0.user_id,
        u1_0.city,
        u1_0.street,
        u1_0.zipcode,
        u1_0.create_at,
        u1_0.deleted,
        u1_0.email,
        u1_0.gender,
        u1_0.is_verify,
        u1_0.name,
        u1_0.nick_name,
        u1_0.password,
        u1_0.role,
        u1_0.updated_at 
    from
        users u1_0 
    where
        (
            u1_0.deleted = false
        ) 
        and u1_0.email=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
